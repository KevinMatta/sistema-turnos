@model IEnumerable<Sistema_Turnos.Models.TurnosPorEmpleadoViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card-header ">
    <div class="d-flex justify-content-between">
        <h3 class="card-title">Calendario</h3>
    </div>
</div>

<div class="card-body">
    <div id="calendar" style="color: white;"></div>

</div>

<!-- Modal -->
<div class="modal fade modal-black" id="crearModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content ">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    <i class="tim-icons icon-simple-remove"></i>
                </button>
            </div>
            @Html.Partial("_Create", new Sistema_Turnos.Models.TurnosPorEmpleadoViewModel());

        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade modal-black" id="eliminarModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content ">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Eliminar</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    <i class="tim-icons icon-simple-remove"></i>
                </button>
            </div>
            <form asp-action="Eliminar">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <p id="mensajeEliminar"></p>
                            <input type="hidden" id="idEliminar" name="TuEm_Id" value="" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                    <button type="button" class="btn btn-dark" data-dismiss="modal">Cancelar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="~/assets/js/core/jquery.min.js"></script>
<script src="~/assets/js/plugins/index.global.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script>
    $(document).ready(function () {
        @*console.log(@Html.Raw(Json.Serialize(Model)))*@
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            headerToolbar: {
                left: 'prevYear,prev,next,nextYear today',
                center: 'title',
                right: 'dayGridMonth,dayGridWeek,listDay'
            },
            views: {
                listDay: { buttonText: 'Dia' },
                dayGridWeek: { buttonText: 'Semana' },
                dayGridMonth: { buttonText: 'Mes' },
                today: {buttonText: 'Hoy'}
            },
            initialView: 'dayGridMonth',
            dayMaxEventRows: 2,
            height: 500,
            selectable: true,
            locale: 'es',
            events: @Html.Raw(Json.Serialize(Model)),
            editable: true,
            dateClick: function (info) {
                var todayStr = new Date().toISOString().slice(0, 10);
                if (info.dateStr > todayStr) {
                    localStorage.setItem("fechaInicio", info.dateStr);
                    $('#exampleModalLabel').text(info.dateStr);
                    $('#crearModal').modal('show');
                }
            },
            eventClick: function (info) {
                info.jsEvent.preventDefault();
                var todayStr = new Date().toISOString().slice(0, 10);
                var formattedDate = moment(info.event.start).format('YYYY-MM-DD');
                if (todayStr < formattedDate) {
                    console.log(info.event.url)

                    $('#mensajeEliminar').text(`Desea Eliminar ${info.event.title} del ${formattedDate}`)
                    $('#idEliminar').val(info.event.id)
                    $('#eliminarModal').modal('show');
                }  
            },
            eventDrop: function (info) {
                var todayStr = new Date().toISOString().slice(0, 10);
                var formattedDate = moment(info.event.start).format('YYYY-MM-DD');
                var oldDate = moment(info.oldEvent.start).format('YYYY-MM-DD');
                if (todayStr > info.oldEvent.start) {
                    info.revert();
                }
                else if (formattedDate > todayStr && oldDate > todayStr) {
                    $.ajax({
                        url: `/TurnosPorEmpleado/Editar/${info.event.id}/${formattedDate}/${info.event.url}`,
                        type: 'POST',
                        contentType: 'application/json',
                        /*data: JSON.stringify({ TuEm_Id: info.event.id, TuEm_FechaInicio: formattedDate }),*/
                        success: function (data) {
                            window.location.href = '/ListTurnosEmpleados';
                            console.log('Solicitud exitosa', data);
                        },
                        error: function (xhr, status, error) {
                            console.error('Error en la solicitud', error);
                        }
                    });
                }
                else {
                    info.revert();
                }
            },
        });
        calendar.render();
    });
</script>
<style>
    #calendar {
        color: white;
    }

    .fc-popover-header, .fc-popover-title {
        color: black;
    }
</style>